buildscript {
    repositories {
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
}

plugins {
    id 'com.gradle.plugin-publish' version '1.2.1'
    id 'maven-publish'
    id 'groovy'
    id 'idea'
    id 'eclipse'
    id 'signing'
    id 'java-gradle-plugin'
}

group = 'com.sourcemuse.gradle.plugin'
version = '2.1.1-SNAPSHOT'

java {
  sourceCompatibility = JavaVersion.VERSION_11
  targetCompatibility = JavaVersion.VERSION_11
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo:4.17.0'
    // Using 4.7 for maximal compatibility back to mongo 2.6 see https://www.mongodb.com/docs/drivers/java/sync/current/compatibility/
    // On Ubuntu 22.04 some tests with mongo versions before 3.6 require libssl1.0.0
    // you can get it from https://old-releases.ubuntu.com/ubuntu/pool/main/o/openssl/libssl1.0.0_1.0.2g-1ubuntu13_amd64.deb
    implementation 'org.mongodb:mongodb-driver-sync:4.7.2'

    testImplementation 'org.spockframework:spock-core:2.3-groovy-3.0', {
        exclude module: 'groovy-all'
    }
    testImplementation 'org.littleshoot:littleproxy:1.1.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.2'
}

tasks.register("javadocJar", Jar) {
  dependsOn javadoc
  archiveClassifier = 'javadoc'
  from 'build/docs/javadoc'
}

tasks.register("sourcesJar", Jar) {
  archiveClassifier = 'sources'
  from sourceSets.main.allSource
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {

			pom {
				artifactId = 'gradle-mongo-plugin'
				name = 'Gradle Mongo Plugin'
				description = 'Gradle plugin for managing a local instance of MongoDb'
				url = 'https://github.com/sourcemuse/GradleMongoPlugin'

				licenses {
					license {
						name = 'The Apache License, Version 2.0'
						url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
					}
				}
				developers {
					developer {
						id = 'roberttaylor426'
						name = 'Robert Taylor'
					}
					developer {
						id = 'flashboss'
						name = 'Luca Stancapiano'
						email = 'luca.stancapiano@vige.it'
					}
				}
				scm {
					connection = 'scm:git@github.com:sourcemuse/GradleMongoPlugin.git'
					developerConnection = 'scm:git@github.com:sourcemuse/GradleMongoPlugin.git'
					url = 'scm:git@github.com:sourcemuse/GradleMongoPlugin.git'
				}
			}
		}
    }
    repositories {
        maven {
            name = 'ossSonatype'
            credentials(PasswordCredentials)
            def releasesRepoUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
            def snapshotsRepoUrl = 'https://oss.sonatype.org/content/repositories/snapshots/'
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}

signing {
    required { !version.endsWith('SNAPSHOT') }
    sign publishing.publications.mavenJava
}

gradlePlugin {
  website = 'https://github.com/sourcemuse/GradleMongoPlugin'
  vcsUrl = 'https://github.com/sourcemuse/GradleMongoPlugin'
    plugins {
        mongoPlugin {
            id = 'com.sourcemuse.mongo'
            displayName = 'Gradle Mongo plugin'
            description = 'Gradle plugin for running a managed instance of Mongo.'
            tags = ['mongo', 'mongodb']
            implementationClass = 'com.sourcemuse.gradle.plugin.flapdoodle.gradle.GradleMongoPlugin'
        }
    }
}

test {
  useJUnitPlatform()
  testLogging {
    events "passed", "skipped", "failed"
  }
}
